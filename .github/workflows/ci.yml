on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ENV_NAME: ${{ vars.env_name }}

jobs:
#  Build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Code checkout
#        uses: actions/checkout@v5
#
#      - name: Maven Build
#        run: mvn install -DskipTests
#
#      - name: Upload artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: products_app_artifact
#          path: target/*.jar
#
#  Test:
#    runs-on: ubuntu-latest
#    needs: Build
#    steps:
#      - name: Code checkout
#        uses: actions/checkout@v5
#
#      - name: Maven Test
#        run: mvn tes
#
#  Scan:
#    runs-on: ubuntu-latest
#    needs: Build
#    steps:
#      - name: Code checkout
#        uses: actions/checkout@v5
#
#      - name: Test checkstyle
#        run: mvn test checkstyle:checkstyle

#  Foo:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Code checkout
#        uses: actions/checkout@v5
#
#      - name: Create Foo dir
#        run: mkdir Foo

  env_name_prod:
    # if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: show value of env name
        run: echo $ENV_NAME

  env_name_dev:
    # if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: show value of env name
        run: echo $ENV_NAME

#  Post-check:
#    if: always()
#    runs-on: ubuntu-latest
#    needs: [Build, Test, Scan]
#    steps:
#      - name: Summarize Results
#        run: |
#          echo "Build result: ${{ needs.Build.result }}"
#          echo "Test result: ${{ needs.Test.result }}"
#          echo "Scan result: ${{ needs.Scan.result }}"
#
#      - name: Failure notif
#        if: |
#          needs.Build.result == 'failure' ||
#          needs.Test.result == 'failure' ||
#          needs.Scan.result == 'failure'
#        run: |
#          echo "‚ùå failed!"

